
variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic"

# We moved to jdk-11 since we are developing on that version
image: maven:3.6.3-jdk-11

# Cache downloaded dependencies and plugins between builds.
# To keep cache by each branch add 'key: "$CI_COMMIT_REF_SLUG"'
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  key: ${CI_COMMIT_REF_SLUG}  
  paths:
    - .m2/repository

stages:
  - build
  - upload
  - release

compile-client:
  stage: build
  rules:
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == "development"'
  script:
    - mvn package --projects slas-client -am -DskipTests
  artifacts:
    paths:
      - slas-client/target/slas-client.jar 
    expire_in: 1 hour

upload-client:
  stage: upload
  rules:
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == "development"'
  script:
    - VERSION=$(mvn -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec -q)
    - TARGET_URL="${PACKAGE_REGISTRY_URL}/SLAS-Client/${VERSION}/slas-client.jar"
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file slas-client/target/slas-client.jar "${TARGET_URL}"'
    - echo "VERSION=$VERSION" >> variables.env 
    - echo "TARGET_URL=$TARGET_URL" >> variables.env 
  artifacts:
    reports:
      dotenv: variables.env

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:v0.8.0
  rules:
  - if: '$CI_COMMIT_TAG'
  needs:
    - job: upload-client
      artifacts: true  
  script:
    - echo 'running release_job for v$VERSION'
  release:
    name: 'Release v$VERSION'
    description: 'Created using the release-cli $EXTRA_DESCRIPTION'  # $EXTRA_DESCRIPTION and the $VERSION
    tag_name: '$VERSION'                                             # variables must be defined elsewhere
    ref: '$CI_COMMIT_SHA'                                            # in the pipeline.
    assets:
      links:
        - name: 'slas-client'
          url: '$TARGET_URL'
